name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: github.com/vitistack
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure Git for private repos
        run: |
          git config --global url.https://$GH_TOKEN@github.com/.insteadOf https://github.com/

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Install dependencies
        run: |
          go mod download
        env:
          GOPRIVATE: github.com/vitistack

      - name: Build
        run: |
          VERSION="${{ github.ref_name }}"
          VERSION="${VERSION#v*}"
          echo "Version $VERSION"
          make build
          touch cmd/isbuilt
          echo "VERSION=$VERSION" >> $GITHUB_ENV

  create-oci-image:
    name: Create OCI Image
    needs: build
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: github.com/vitistack
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/vitistack/ipam-operator
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GITHUB_TOKEN=${{ secrets.GH_TOKEN }}

  publish-helm:
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    needs:
      - create-oci-image
    steps:
      - uses: actions/checkout@v4

      - name: Install helm
        uses: azure/setup-helm@v1
        with:
          version: v3.16.4

      - name: install-yq
        run: |
          wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz -O - | tar xz && mv ${BINARY} yq && chmod +x yq
        env:
          VERSION: v4.44.5
          BINARY: yq_linux_amd64

      - name: Build helm chart
        run: |
          export HELM_VERSION=${VERSION#v*}
          ./yq e -i '.version = strenv(HELM_VERSION),.appVersion = strenv(VERSION)' chart/ipam-operator/Chart.yaml
          ./yq e -i '.global.controller.tag = strenv(VERSION),.global.controller.repository = "ncr.sky.nhn.no/ghcr/vitistack/ipam-operator"' chart/ipam-operator/values.yaml
          helm package chart/ipam-operator
          echo  ${{ secrets.GITHUB_TOKEN }} | helm registry login -u ${{ github.actor }} ghcr.io --password-stdin
          helm push ipam-operator-${HELM_VERSION}.tgz oci://ghcr.io/vitistack/helm/
        env:
          VERSION: ${{ github.ref_name }}